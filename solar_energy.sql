SET sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''))

-- selecting database 
use solar_energy;

-- create table #1
-- Cost of PV Solar residential, 2000-2015
CREATE TABLE pv_system_costs (
cost_id INT NOT NULL auto_increment PRIMARY KEY, 
Entity VARCHAR(100),
Country_code VARCHAR(3),
Year_Measured INT,
Total_installed_price_per_kWh INT,
NonModule_Costs_per_kWh INT,
Module_price_per_kWh DECIMAL(6,3)
); 

-- create table #2
-- energy generated by solar by region, 2000-2019
CREATE TABLE energy_consumption (
energy_id INT NOT NULL AUTO_INCREMENT primary key,
Entity VARCHAR(100),
Country_code VARCHAR(3),
Year_Measured INT,
Electricity_From_Solar_TWh DECIMAl(6,3)
);


-- create table #3
-- Energy generated by solar per capita, 1965-2019
CREATE TABLE consumption_per_capita (
per_capita_energy_id INT NOT NULL AUTO_INCREMENT primary key,
Entity VARCHAR(100),
Country_code VARCHAR(3),
Year_Measured INT,
solar_per_capita_kWh DECIMAL(6,3) 
);

-- create table #4 
-- greenhouse gas generated per capita 
-- land-use change = human mod of natural landscape
-- fugitive emissions = leaks of gases from pressurized environments 
CREATE TABLE ghg_per_capita (
ghg_id INT NOT NULL AUTO_INCREMENT primary key,
entity VARCHAR(100),
Country_code VARCHAR(3),
Year_Measured INT,
Aviation_and_shipping DECIMAL(6,4),
LandUse_change_and_forestry DECIMAL(6,4),
Manufacturing_and_construction DECIMAL(6,4),
Fugitive_emissions DECIMAL(6,4),
Agriculture	DECIMAL(6,4),
Buildings DECIMAL(6,4),
Electricity_and_heat DECIMAL(6,4),	
Industry DECIMAL(6,4),
Transport DECIMAL(6,4),	
Waste DECIMAL(6,4)
);


-- create table #5 
-- Co2 (tonnes per person) per capita v. renewable electricity
-- not exclusively solar
-- territorial emissions (consider exports, not imports)
CREATE TABLE Co2_v_renewable_electricity (
co2_id INT NOT NULL AUTO_INCREMENT primary key,
ENTITY VARCHAR(100),
Country_code VARCHAR(3),
Year_Measured INT,
Annual_Co2_Emissions DECIMAL(7,4),
percent_renewable_electricity DECIMAL(4,2),
continent VARCHAR(20)
);

-- Delete row 
DELETE FROM Co2_v_renewable_electricity
WHERE year_measured = 2021;

-- delete multiple unecessary columns
ALTER TABLE Co2_v_renewable_electricity
DROP COLUMN country_code, 
DROP COLUMN continent; 


-- what is the percent increase in renewable energy usage?
-- potential areas to target (larger percent increases in renewable energy = possibly more open to solar)
-- date frame = 1985 - 2019
select co2_v_renewable_electricity.entity,
co2_v_renewable_electricity.percent_renewable_electricity as percent_renewable_electricity_1985,
co2_v_renewable_electricity_max_year.percent_renewable_electricity as percent_renewable_electricity_2019, 
((co2_v_renewable_electricity_max_year.percent_renewable_electricity - co2_v_renewable_electricity.percent_renewable_electricity) / co2_v_renewable_electricity.percent_renewable_electricity * 100)
as percent_increase_renewable_elctricity
from Co2_v_renewable_electricity
left join co2_v_renewable_electricity_max_year on 
co2_v_renewable_electricity_max_year.entity = co2_v_renewable_electricity.entity
where co2_v_renewable_electricity.percent_renewable_electricity > 0.00
group by entity;


-- what is the min measured year for renewable electricity
select min(year_measured) from co2_v_renewable_electricity
where percent_renewable_electricity > 0.00;

-- create new table to join with another table
create table co2_v_renewable_electricity_max_year 
select entity, year_measured, percent_renewable_electricity 
from co2_v_renewable_electricity
where year_measured = (select max(year_measured) from co2_v_renewable_electricity)
order by entity;

-- which countries need it based on Co2 measurements? Show percent change (1985 - 2019)
-- combine renewable electricity percent change
select Co2_v_renewable_electricity.entity, 

Co2_v_renewable_electricity.year_measured, Co2_v_renewable_electricity.annual_co2_emissions,
co2_emissions_2019.year_measured, co2_emissions_2019.annual_co2_emissions,

((co2_emissions_2019.annual_co2_emissions-Co2_v_renewable_electricity.annual_co2_emissions)/Co2_v_renewable_electricity.annual_co2_emissions *100) as Co2_total_percent_change,
((co2_v_renewable_electricity_max_year.percent_renewable_electricity - co2_v_renewable_electricity.percent_renewable_electricity) / co2_v_renewable_electricity.percent_renewable_electricity * 100)
as renewable_electricity_percent_change
from Co2_v_renewable_electricity
left join co2_emissions_2019 on
Co2_v_renewable_electricity.entity = co2_emissions_2019.entity 
left join co2_v_renewable_electricity_max_year on
co2_v_renewable_electricity_max_year.entity = Co2_v_renewable_electricity.entity
where Co2_v_renewable_electricity.year_measured = 1985;



create table co2_emissions_2019
select entity, year_measured, annual_co2_emissions from Co2_v_renewable_electricity
where year_measured = 2019;


-- cleaning data
select * from consumption_per_capita;
delete from consumption_per_capita
where entity NOT in 
('United States', 'Brazil', 'China', 'Switzerland', 'Russia', 'United Kingdom', 'South America', 'Europe', 'Africa');
delete from consumption_per_capita
where per_capita_energy_id BETWEEN 4044 and 4098;

-- delete unnecessary rows
delete from consumption_per_capita 
where per_capita_energy_id = 21;

-- converting TWh to KWh 
SELECT *, electricity_from_solar_twh * 1.00E+09 AS electricity_from_solar_kWh 
from energy_consumption;

-- alterations to energy_consumption 

select * from energy_consumption
order by entity, year_measured;

delete from energy_consumption
where entity not in ('united states', 'africa', 'brazil', 'china', 'europe', 'russia', 'switzerland', 'united kingdom');

delete from energy_consumption
where year_measured < '1985';

alter table energy_consumption 
drop column country_code;

-- greenhouse gas generated per capita 
-- which sector is the highest contributor to ghg in most countries? 

select count(sector) as highest_number_of_occurances, sum(max_value) as total_ghg from
(select entity, greatest(Aviation_and_shipping,LandUse_change_and_forestry, 
manufacturing_and_construction, Fugitive_emissions, agriculture, buildings,
electricity_and_heat, industry, transport, waste) as max_value,
CASE 
	WHEN (Aviation_and_shipping) >= (LandUse_change_and_forestry) 
		and Aviation_and_shipping >= (manufacturing_and_construction) 
        and Aviation_and_shipping >= (Fugitive_emissions) 
		and Aviation_and_shipping >= (agriculture) 
        and Aviation_and_shipping >= (buildings) 
        and Aviation_and_shipping >= (electricity_and_heat) 
        and Aviation_and_shipping >= (industry) 
        and Aviation_and_shipping >= (transport) 
        and Aviation_and_shipping >= (waste) 
	THEN 'aviation_and_shipping'
	WHEN (LandUse_change_and_forestry) >= (Aviation_and_shipping) 
		and LandUse_change_and_forestry >= (manufacturing_and_construction) 
        and LandUse_change_and_forestry >= (Fugitive_emissions) 
        and LandUse_change_and_forestry >= (agriculture) 
        and LandUse_change_and_forestry >= (buildings) 
        and LandUse_change_and_forestry >= (electricity_and_heat) 
        and LandUse_change_and_forestry >= (industry) 
        and LandUse_change_and_forestry >= (transport) 
        and LandUse_change_and_forestry >= (waste) 
	THEN 'LandUse_change_and_forestry'
    WHEN (manufacturing_and_construction) >= (Aviation_and_shipping) 
		and manufacturing_and_construction >= (LandUse_change_and_forestry) 
		and manufacturing_and_construction >= (Fugitive_emissions) 
        and manufacturing_and_construction >= (agriculture) 
        and manufacturing_and_construction >= (buildings)
		and manufacturing_and_construction >= (electricity_and_heat) 
        and manufacturing_and_construction >= (industry) 
        and manufacturing_and_construction >= (transport) 
        and manufacturing_and_construction >= (waste)
	THEN 'manufacturing_and_construction'
    WHEN (Fugitive_emissions) >= (manufacturing_and_construction) 
		and Fugitive_emissions >= (Aviation_and_shipping) 
        and Fugitive_emissions >= (LandUse_change_and_forestry) 
		and Fugitive_emissions >= (agriculture) 
        and Fugitive_emissions >= (buildings) 
        and Fugitive_emissions >= (electricity_and_heat) 
        and Fugitive_emissions >= (industry) 
        and Fugitive_emissions >= (transport) 
        and Fugitive_emissions >= (waste)
	THEN 'Fugitive_emissions'
    WHEN (agriculture) >= (Fugitive_emissions) 
		and agriculture >= (manufacturing_and_construction) 
        and agriculture >= (Aviation_and_shipping) 
        and agriculture >= (LandUse_change_and_forestry) 
        and agriculture >= (buildings) 
        and agriculture >= (electricity_and_heat) 
        and agriculture >= (industry) 
        and agriculture >= (transport) 
        and agriculture >= (waste)
	THEN 'agriculture'
	WHEN (buildings) >= (agriculture) 
		and buildings >= (Fugitive_emissions) 
		and buildings >= (manufacturing_and_construction) 
		and buildings >= (Aviation_and_shipping) 
		and buildings >= (LandUse_change_and_forestry) 
		and buildings >= (electricity_and_heat) 
		and buildings >= (industry) 
		and buildings >= (transport) 
		and buildings >= (waste)
	THEN 'buildings'
    WHEN (electricity_and_heat) >= (buildings) 
		and electricity_and_heat >= (agriculture) 
		and electricity_and_heat >= (Fugitive_emissions) 
		and electricity_and_heat >= (manufacturing_and_construction) 
		and electricity_and_heat >= (Aviation_and_shipping) 
		and electricity_and_heat >= (LandUse_change_and_forestry)
		and electricity_and_heat >= (industry) 
		and electricity_and_heat >= (transport) 
		and electricity_and_heat >= (waste)
    THEN 'electricity_and_heat'
    WHEN (industry) >= (buildings) 
		and industry >= (agriculture) 
		and industry >= (Fugitive_emissions) 
		and industry >= (manufacturing_and_construction) 
		and industry >= (Aviation_and_shipping)
		and industry >= (LandUse_change_and_forestry) 
		and industry >= (electricity_and_heat) 
		and industry >= (transport) 
		and industry >= (waste)
	THEN 'industry'
    WHEN (transport) >= (industry) 
    and transport >= (buildings) 
    and transport >= (agriculture) 
    and transport >= (Fugitive_emissions) 
    and transport >= (manufacturing_and_construction) 
    and transport >= (Aviation_and_shipping) 
    and transport >= (LandUse_change_and_forestry) 
    and transport >= (electricity_and_heat) 
    and transport >= (waste)
	THEN 'transport'
  WHEN (waste) >= (industry) 
    and waste >= (buildings) 
    and waste >= (agriculture) 
    and waste >= (Fugitive_emissions) 
    and waste >= (manufacturing_and_construction) 
    and waste >= (Aviation_and_shipping) 
    and waste >= (LandUse_change_and_forestry) 
    and waste >= (electricity_and_heat) 
    and waste >= (transport)
	THEN 'waste'
END AS sector
from ghg_per_capita
where year_measured = 2018
group by entity
order by sector) as electricity
where sector like 'electricity%'
;
select * from ghg_per_capita;

select * from pv_system_costs;

select * from consumption_per_capita
order by entity, year_measured;

delete from consumption_per_capita
where year_measured < '1985';
select * from ghg_per_capita; 

delete from ghg_per_capita
where entity not in ('united states', 'africa', 'brazil', 'china', 'europe', 'russia', 'switzerland', 'united kingdom');


-- compare total sum of ghg from 1990 to 2018
select ghg_per_capita.entity, ghg_per_capita.year_measured, (Aviation_and_shipping + LandUse_change_and_forestry + Manufacturing_and_construction + Fugitive_emissions + Agriculture +
				Buildings + Electricity_and_heat + Industry + Transport + Waste) as sum_ghg from ghg_per_capita 
left join consumption_per_capita as c
on ghg_per_capita.entity = c.entity
where ghg_per_capita.year_measured = '2018'
group by ghg_per_capita.entity 
union 
select ghg_per_capita.entity, ghg_per_capita.year_measured, (Aviation_and_shipping + LandUse_change_and_forestry + Manufacturing_and_construction + Fugitive_emissions + Agriculture +
				Buildings + Electricity_and_heat + Industry + Transport + Waste) as sum_ghg from ghg_per_capita
left join consumption_per_capita as c
on ghg_per_capita.entity = c.entity
where ghg_per_capita.year_measured = '1990'
group by ghg_per_capita.entity
order by entity, year_measured
 ; 
 
select * from ghg_per_capita 
where ghg_per_capita.year_measured = '2018' and entity = 'united states';

select * from pv_system_costs
;
